const int buzzer = 13;

const int button1 = 2; //blue button         
const int button2 = 3; //yellow button         
const int button3 = 4; //green button         
const int button4 = 5; //red button       
  
const int led1 = 7; //blue led            
const int led2 = 8; //yellow led            
const int led3 = 9; //green led            
const int led4 = 10; //red led

const int tones[] = {1915, 1700, 1519, 1432, 2700};

int buttonState[] = {0,0,0,0};
int lastButtonState[] = {0,0,0,0};
int buttonPushCounter[] = {0,0,0,0};

int gameStart = 0;
int wait = 0;
int level = 1;
int randNum = 0;
int randLED = 0;
int intputDelay = 1000;
int ledOnTime = 500;
int maxLevel = 10;
int pinTone = 0;
int correctSequence = 0;
int maxSpeed = 5;
int ledDelay = 200;


void playTone(int tone, int duration)
{
  for (long i = 0; i < duration * 1000L; i += tone * 2)
  {
    digitalWrite(buzzer, HIGH);
    delayMicroseconds(tone);
    digitalWrite(buzzer, LOW);
    delayMicroseconds(tone);
  }
}

       
void setup() 
{ 
  
  pinMode(button1, INPUT); //assigning variable to button input
  pinMode(button2, INPUT); //assigning variable to button input
  pinMode(button3, INPUT); //assigning variable to button input
  pinMode(button4, INPUT); //assigning variable to button input
 
  pinMode(led1, OUTPUT); //assigning variable to LED output
  pinMode(led2, OUTPUT); //assigning variable to LED output
  pinMode(led3, OUTPUT); //assigning variable to LED output
  pinMode(led4, OUTPUT); //assigning variable to LED output
  
  pinMode(buzzer, OUTPUT); //assigning variable to buzzer output

}



void loop()
{
  int maxArray[maxLevel];
  int currentArray[maxLevel];
  
  int i;
  if (gameStart == 0)
  {
   for(i=0; i<maxLevel; i++) 
   {
     maxArray[i]=0;
     currentArray[i]=0;
     randNum = random(1,100);
     if (randNum <= 25)
       randLED=0;
     else if (randNum>25 && randNum<=50)
       randLED=1;
     else if (randNum>50 && randNum<=75)
       randLED=2;
     else if (randNum<=10)
       randLED=3;
       maxArray[i]=randLED;
    }
    gameStart = 1;
  }
  
  
  if (wait == 0)
  {
    delay (200);
    i = 0;
    for (i = 0; i < level; i= i + 1)
    {
      ledDelay = ledOnTime/(1+(maxSpeed/maxLevel)*(level - 1));
      pinTone = maxArray[i];
      digitalWrite(pinTone+7, HIGH);
      playTone(tones[pinTone], ledDelay);
      digitalWrite(pinTone+7, LOW);
      delay(100/maxSpeed);
    }
    wait = 1;
  }
  
  i = 0;
  int buttonchange = 0;    
  int j = 0;
  while (j < level)
  {    
    while (buttonchange == 0)
    {
      for (i = 0; i < 4; i = i + 1)
      { 
        buttonState[i] = digitalRead(i+2);
        buttonchange = buttonchange + buttonState[i];
      }
    }
    for (i = 0; i < 4; i = i + 1)
    {
      if (buttonState[i] == HIGH) 
      {
        digitalWrite(i+7, HIGH);
        playTone(tones[i], ledOnTime);
        digitalWrite(i+7, LOW);
        wait = 0;
        currentArray[j]=i; 
        buttonState[i] = LOW;
        buttonchange = 0;
      }
    } 
    if (maxArray[j] == currentArray[j])
    {
      j++; 
      correctSequence = 1;
    }
    else
    {
      correctSequence = 0;
      i = 4;
      j = level;
      wait = 0;
    }
  }
  
  
  if (correctSequence == 0)
  {
    delay(300);
    i = 0;
    gameStart = 0;
    level = 1;
    for (i = 0; i < 4; i = i + 1)
    {
      digitalWrite(i+7, HIGH);
    }
    playTone(tones[4], ledOnTime);
    for (i = 0; i < 4; i = i + 1)
    {
      digitalWrite(i+7, LOW);
    }
    delay (200);
    for (i = 0; i < 4; i = i + 1)
    {
      digitalWrite(i+7, HIGH);
    }
    playTone(tones[4], ledOnTime);
    for (i = 0; i < 4; i = i + 1)
    {
      digitalWrite(i+7, LOW);
    }
    delay(500);
    gameStart = 0;
  }
  
 
  if (correctSequence == 1)
  {
    level++;
    wait = 0;
  }    
  if (level == maxLevel)
  {
    delay(500);

    int notes[] = {2, 2, 2, 2, 0, 1, 2, 1, 2};
    int note = 0;
    int tempo[] = {200, 200, 200, 400, 400, 400, 200, 200, 600}; 
    int breaks[] = {100, 100, 100, 200, 200, 200, 300, 100, 200}; 
    for (i = 0; i < 9; i = i + 1)
    {
      note = notes[i];
      digitalWrite(note+7, HIGH);
      playTone(tones[note], tempo[i]);
      digitalWrite(note+7, LOW);
      delay(breaks[i]);
    }
    gameStart = 0;
    level = 1;
    maxLevel = maxLevel + 2;
    maxSpeed = maxSpeed + 1;
  }
}
